@tailwind base;
@tailwind components;
@tailwind utilities;

@property --rotate {
    syntax: "<angle>";
    initial-value: 132deg;
    inherits: false;
}

:root {
    --card-height: 30vh;

    --color-primary: rgb(146, 39, 218);
    --color-primary-hover: rgb(189, 105, 245);
    --color-primary25: rgb(223, 183, 250);
    --color-secondary: rgb(59, 12, 30);
    --color-secondary-hover: rgb(83, 20, 59);

    --black: #222;
    --black80: #333333aa;
    --black25: #44444480;

    --white: #eee;
    --white80: #eeeeeecc;
    --white25: #eeeeee80;

    --bg-card: gray;
}

@media (min-width: 720px) {
    .card {
        --card-height: 25vh;
    }
}

@media (min-width: 1400px) {
    .card {
        --card-height: 25vh;
    }
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: linear-gradient(20deg, #090909, #292929);
}

dialog::backdrop {
    background-color: rgb(0, 0, 0, 0.9);
    backdrop-filter: blur(2px);
}
input:focus, textarea:focus {
    outline: 2px solid var(--color-primary);
}

.card {
    position: relative;
    box-shadow:
        inset -2px -2px 2px rgba(0, 0, 0, 0.75),
        inset 2px 2px 2px rgba(80, 80, 80, 0.25),
        35px 5px 50px rgba(0, 0, 0, 0.75);
    background: linear-gradient(250deg, rgb(15, 15, 15), rgb(30, 30, 30));
    background-size: 200%;
    background-position: 100%;
    transition: background 0.5s, transform 0.5s;
    border-radius: 0.75rem;
    height: var(--card-height);
}

.card:hover {
    background-position: 0;
}

.card::before,
.card::after {
    opacity: 0;
    transition: opacity 0.5;
}

.card:hover::before {
    content: "";
    position: absolute;
    width: 100.5%;
    height: 101%;
    top: -0.5%;
    left: -0.25%;
    border-radius: 0.75rem;
    background: linear-gradient(var(--rotate), orange, #4a00ff);
    animation: spin 2s ease-in-out infinite;
    opacity: 1;
}

.card:hover::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 0.75rem;
    background: linear-gradient(var(--rotate), orange, #4a00ff);
    filter: blur(30px);
    animation: spin 2s ease-in-out infinite;
    opacity: 1;
}

.card>div {
    position: absolute;
    inset: 2px;
    z-index: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    border-radius: 0.5rem;
    background: linear-gradient(250deg, rgb(15, 15, 15), rgb(30, 30, 30));
    background-size: 200%;
    background-position: 100%;
    transition: background 0.5s, transform 0.5s;
}

.card:hover>div {
    inset: 2px;
    background-position: 0;
}




@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes spin {
    0% {
        --rotate: 0deg;
    }

    100% {
        --rotate: 360deg;
    }
}

@layer components {
    .btn {
        @apply px-6 py-2 text-[var(--white)] rounded-lg transition-colors duration-150 shadow tracking-wider font-semibold flex justify-center items-center
    }
    .btn-square {
        @apply p-2
    }
    .btn-primary {
      @apply bg-[var(--color-primary)] hover:bg-[var(--color-primary-hover)]
    }
    .btn-secondary {
        @apply bg-[var(--color-secondary)] hover:bg-[var(--color-secondary-hover)]
    }
    .btn-error {
      @apply bg-[#ff000080] hover:bg-[#ff000040]
    }
    .btn-success {
      @apply bg-[#00800080] hover:bg-[#00800040]
    }
    .btn-ghost {
      @apply border border-black/10 bg-transparent hover:bg-[var(--black80)]
    }
    .btn-active {
        @apply bg-[#1b1b1b]
    }
  
    .input {
      @apply bg-[var(--white80)] py-2 px-4 rounded-lg shadow text-[var(--black)] text-center hover:bg-[var(--color-primary25)]
    }
    .input::placeholder {
      @apply text-[var(--black80)]
    }
  }